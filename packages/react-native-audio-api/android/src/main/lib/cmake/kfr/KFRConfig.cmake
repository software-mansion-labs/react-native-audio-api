# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "3.0.0")
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 3.0.0...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS kfr_dsp_sse kfr_dsp_sse2 kfr_dsp_sse3 kfr_dsp_ssse3 kfr_dsp_sse41 kfr_dsp_sse42 kfr_dsp_avx kfr_dsp_avx2 kfr_dsp_avx512 kfr_dsp_neon kfr_dsp_neon64 kfr_dsp kfr_io kfr_dft_sse kfr_dft_sse2 kfr_dft_sse3 kfr_dft_ssse3 kfr_dft_sse41 kfr_dft_sse42 kfr_dft_avx kfr_dft_avx2 kfr_dft_avx512 kfr_dft_neon kfr_dft_neon64 kfr_dft kfr)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target kfr_dsp_sse
add_library(kfr_dsp_sse STATIC IMPORTED)

set_target_properties(kfr_dsp_sse PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_sse2
add_library(kfr_dsp_sse2 STATIC IMPORTED)

set_target_properties(kfr_dsp_sse2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_sse3
add_library(kfr_dsp_sse3 STATIC IMPORTED)

set_target_properties(kfr_dsp_sse3 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_ssse3
add_library(kfr_dsp_ssse3 STATIC IMPORTED)

set_target_properties(kfr_dsp_ssse3 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_sse41
add_library(kfr_dsp_sse41 STATIC IMPORTED)

set_target_properties(kfr_dsp_sse41 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_sse42
add_library(kfr_dsp_sse42 STATIC IMPORTED)

set_target_properties(kfr_dsp_sse42 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_avx
add_library(kfr_dsp_avx STATIC IMPORTED)

set_target_properties(kfr_dsp_avx PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_avx2
add_library(kfr_dsp_avx2 STATIC IMPORTED)

set_target_properties(kfr_dsp_avx2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_avx512
add_library(kfr_dsp_avx512 STATIC IMPORTED)

set_target_properties(kfr_dsp_avx512 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_neon
add_library(kfr_dsp_neon STATIC IMPORTED)

set_target_properties(kfr_dsp_neon PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp_neon64
add_library(kfr_dsp_neon64 STATIC IMPORTED)

set_target_properties(kfr_dsp_neon64 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dsp
add_library(kfr_dsp INTERFACE IMPORTED)

set_target_properties(kfr_dsp PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr_dsp_sse;kfr_dsp_sse2;kfr_dsp_sse3;kfr_dsp_ssse3;kfr_dsp_sse41;kfr_dsp_sse42;kfr_dsp_avx;kfr_dsp_avx2;kfr_dsp_avx512;kfr_dsp_neon;kfr_dsp_neon64"
  INTERFACE_LINK_OPTIONS "LINKER:-force_load,\$<TARGET_FILE:kfr_dsp_sse>"
)

# Create imported target kfr_io
add_library(kfr_io STATIC IMPORTED)

set_target_properties(kfr_io PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_sse
add_library(kfr_dft_sse STATIC IMPORTED)

set_target_properties(kfr_dft_sse PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_sse2
add_library(kfr_dft_sse2 STATIC IMPORTED)

set_target_properties(kfr_dft_sse2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_sse3
add_library(kfr_dft_sse3 STATIC IMPORTED)

set_target_properties(kfr_dft_sse3 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_ssse3
add_library(kfr_dft_ssse3 STATIC IMPORTED)

set_target_properties(kfr_dft_ssse3 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_sse41
add_library(kfr_dft_sse41 STATIC IMPORTED)

set_target_properties(kfr_dft_sse41 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_sse42
add_library(kfr_dft_sse42 STATIC IMPORTED)

set_target_properties(kfr_dft_sse42 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_avx
add_library(kfr_dft_avx STATIC IMPORTED)

set_target_properties(kfr_dft_avx PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_avx2
add_library(kfr_dft_avx2 STATIC IMPORTED)

set_target_properties(kfr_dft_avx2 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_avx512
add_library(kfr_dft_avx512 STATIC IMPORTED)

set_target_properties(kfr_dft_avx512 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_neon
add_library(kfr_dft_neon STATIC IMPORTED)

set_target_properties(kfr_dft_neon PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft_neon64
add_library(kfr_dft_neon64 STATIC IMPORTED)

set_target_properties(kfr_dft_neon64 PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr"
)

# Create imported target kfr_dft
add_library(kfr_dft INTERFACE IMPORTED)

set_target_properties(kfr_dft PROPERTIES
  INTERFACE_LINK_LIBRARIES "kfr_dft_sse;kfr_dft_sse2;kfr_dft_sse3;kfr_dft_ssse3;kfr_dft_sse41;kfr_dft_sse42;kfr_dft_avx;kfr_dft_avx2;kfr_dft_avx512;kfr_dft_neon;kfr_dft_neon64"
  INTERFACE_LINK_OPTIONS "LINKER:-force_load,\$<TARGET_FILE:kfr_dft_sse>"
)

# Create imported target kfr
add_library(kfr INTERFACE IMPORTED)

set_target_properties(kfr PROPERTIES
  INTERFACE_COMPILE_OPTIONS "\$<\$<CONFIG:DEBUG>:-DKFR_DEBUG>;-faligned-allocation"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "stdc++;pthread;m"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/KFRConfig-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
